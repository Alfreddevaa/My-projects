# -*- coding: utf-8 -*-
"""Task 5 Student dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N-us3tAl0vEGD4zuwOHlSp25VXtJbfhP
"""

#New database connection
import pymongo
from pymongo import MongoClient
client = pymongo.MongoClient("mongodb+srv://alfred:1234@cluster0.ydwyn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority")
db = client.Student 
table = db.Marksheet 
list1=[]
list2=[]
total=0 # 1. student name who scored maximum scores i
great=0
for x in table.find():
    y=x.get('scores')[0]
    z=x.get('scores')[1]
    s=x.get('scores')[2]
    total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
    if total>great:
      great=total
#print(great) The Highest Mark by combining the 3 types of marks Obtained
for x in table.find():
    y=x.get('scores')[0]
    z=x.get('scores')[1]
    s=x.get('scores')[2]
    total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
    if total==great:
      print(x.get("name"),"1st Rank") #Displays the the person with the Highest Score


# 2. Below Average Students
for x in table.find():
    y=x.get('scores')[0]
    z=x.get('scores')[1]
    s=x.get('scores')[2]
    total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
    list1.append(total) 
j=table.count_documents({})# No. of Students
average=sum(list1)/j #Sum of students marks by no. of students
print("Average=",average)

for x in table.find():
  y=x.get('scores')[0]
  z=x.get('scores')[1]
  s=x.get('scores')[2]
  total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
  if total<average:
    list2.append(x.get("name"))
print("Average Students List",list2)


# 3. Below pass mark as fail and above as pass
passmark=300*0.4 # 40% is pass mark.
print("Passmark=",passmark) 
for x in table.find():
  y=x.get('scores')[0]
  z=x.get('scores')[1]
  s=x.get('scores')[2]
  total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
  if total<passmark:
    c={
        "Result":"FAIL"
        }
    query={"_id":x.get("_id"),
        "name":x.get("name")}
    table.update_one(query,{"$set":c})
  else:
    d={
       "Result":"PASS"
       }
    query={"_id":x.get("_id"),
        "name":x.get("name")}
    table.update_one(query,{"$set":d})

for x in table.find().limit(10): 
      print(x.get("Result"))


 # 4. total and average of the exam, quiz and homework
exam=0
quiz=0
home=0
for x in table.find():
    y=x.get('scores')[0]
    z=x.get('scores')[1]
    s=x.get('scores')[2]
    exam=exam+float(str(y['score']))
    quiz=quiz+float(str(z['score']))
    home=home+float(str(s['score']))
print("Total of Exam={} ,Quiz={} ,Home={}".format(exam,quiz,home))
print("Average of Exam={} ,Quiz={} ,Home={}".format(exam/j,quiz/j,home/j))

# 5.Create a new collection which consists of students who scored below average and above 40% in all the categories
import pymongo
from pymongo import MongoClient
client = pymongo.MongoClient("mongodb+srv://alfred:1234@cluster0.ydwyn.mongodb.net/myFirstDatabase?retryWrites=true&w=majority")
db = client.Student 
collist = db.list_collection_names()
if "Newmarksheet" in collist:
  print("The collection already exists.")
else:
  table1 = db.create_collection("Newmarksheet")
for x in table.find():
  y=x.get('scores')[0]
  z=x.get('scores')[1]
  s=x.get('scores')[2]
  total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
  if total<average and total>passmark:
    query={
        "_id":x.get("_id"),
        "name":x.get("name"),
        "Result":x.get("Result"),
        "scores":x.get('scores')
        }
    table1.insert_one(query)

for x in table1.find().limit(10):
  print(x)

# 6.new collection which consists of students who scored below the fail mark in all the categories.
collist = db.list_collection_names()
if "Failedstudents" in collist:
  print("The collection already exists.")
else:
  table1 = db.create_collection("Failedstudents")
for x in table.find():
  y=x.get('scores')[0]
  z=x.get('scores')[1]
  s=x.get('scores')[2]
  total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
  if total<passmark:
    query={
        "_id":x.get("_id"),
        "name":x.get("name"),
        "Result":x.get("Result"),
        "scores":x.get('scores')
        }
    table1.insert_one(query)
for x in table1.find().limit(10):
  print(x)

#7.Create a new collection which consists of students who scored above pass mark in all the categories
collist = db.list_collection_names()
if "Passedstudents" in collist:
  print("The collection already exists.")
else:
  table1 = db.create_collection("Passedstudents")
for x in table.find():
  y=x.get('scores')[0]
  z=x.get('scores')[1]
  s=x.get('scores')[2]
  total=float(str(y['score']))+float(str(z['score']))+float(str(s['score']))
  if total>passmark:
    query={
        "_id":x.get("_id"),
        "name":x.get("name"),
        "Result":x.get("Result"),
        "scores":x.get('scores')
        }
    table1.insert_one(query)
for x in table1.find().limit(10):
  print(x)